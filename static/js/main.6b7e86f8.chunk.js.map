{"version":3,"sources":["services/mode.js","components/InputBox.js","components/Searchbox.js","components/InputWrapper.js","components/Header.js","util/common.js","services/filter.js","components/Filter.js","components/ButtonWrapper.js","components/Footer.js","components/Checkbox.js","components/TodoItem.js","components/FilteredList.js","components/TodoList.js","services/todo.js","components/StateProvider.js","components/App.js","reportWebVitals.js","index.js"],"names":["MODE_NONE","MODE_SEARCH","MODE_CREATE","InputBox","props","state","value","handleChange","bind","handleKeyUp","clear","e","this","setState","target","addNew","text","trim","keyCode","type","autoFocus","className","placeholder","onChange","onKeyUp","React","Component","Searchbox","query","searchToDo","InputWrapper","mode","Header","objectWithOnly","object","attrs","newObject","forEach","attr","FILTER_ACTIVE","FILTER_COMPLETED","options","getOptions","Filter","change","getClass","key","filter","Object","keys","map","onClick","ButtonWrapper","changeMode","isCreateMode","isSearchMode","title","Footer","count","Checkbox","checked","changeStatus","id","TodoItem","item","data","completed","htmlFor","FilteredList","filteredItems","length","TodoList","list","actions","changeFilter","q","toLowerCase","str","substr","indexOf","search","applyFilter","todoCounter","StateProvider","updatedList","assign","concat","addToList","itemId","items","index","findIndex","update","$set","updateStatus","children","Children","child","cloneElement","wrapChildrenWith","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8PAAaA,G,MAAY,QACZC,EAAc,SACdC,EAAc,S,cC0CZC,E,kDAxCX,WAAaC,GAAQ,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACTC,MAAOF,EAAME,OAAS,IAE1B,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,MAAQ,EAAKA,MAAMF,KAAX,gBAPG,E,gDAUpB,SAAaG,GACTC,KAAKC,SAAS,CAACP,MAAOK,EAAEG,OAAOR,U,mBAGnC,WACIM,KAAKC,SAAS,CAACP,MAAO,O,yBAG1B,SAAYK,GAAI,IACLI,EAAUH,KAAKR,MAAfW,OACDC,EAAOJ,KAAKP,MAAMC,MAAMW,OAEb,IAAbN,EAAEO,UACFH,EAAOC,GACPJ,KAAKC,SAAS,CAACP,MAAO,Q,oBAI9B,WACI,OACI,uBAAOa,KAAK,OAAOC,WAAS,EACvBC,UAAU,wBACVC,YAAY,UACZC,SAAUX,KAAKL,aACfiB,QAASZ,KAAKH,YACdH,MAAOM,KAAKP,MAAMC,Y,GApCZmB,IAAMC,WCcdC,E,4JAdX,WAAU,IAAD,EACuBf,KAAKR,MAA1BwB,EADF,EACEA,MAAOC,EADT,EACSA,WACd,OACI,uBACIV,KAAK,OACLE,UAAU,sBACVf,MAAOsB,EACPL,SAAU,SAAAZ,GAAC,OAAIkB,EAAWlB,EAAEG,OAAOR,QACnCgB,YAAY,e,GATJG,IAAMC,WCmBfI,E,4JAdX,WAAU,IAAD,EACqClB,KAAKR,MAAxC2B,EADF,EACEA,KAAMhB,EADR,EACQA,OAAQa,EADhB,EACgBA,MAAOC,EADvB,EACuBA,WAC5B,OAAQE,GACJ,KAAK7B,EACD,OAAO,cAAC,EAAD,CAAea,WAE1B,KAAKd,EACD,OAAO,cAAC,EAAD,CAAgB2B,QAAOC,eAElC,QACI,OAAO,U,GAXIJ,IAAMC,WCalBM,E,kDAdX,WAAa5B,GAAQ,uCACVA,G,0CAGX,WAAU,IAAD,EACqCQ,KAAKR,MAAxCW,EADF,EACEA,OAAQgB,EADV,EACUA,KAAMH,EADhB,EACgBA,MAAOC,EADvB,EACuBA,WAC5B,OACI,mCACI,8CACA,cAAC,EAAD,CAAmBd,SAAQgB,OAAMH,QAAOC,sB,GAVnCJ,IAAMC,W,OCFpB,SAASO,EAAeC,EAAQC,GACnC,IAAIC,EAAY,GAMhB,OAJAD,EAAME,SAAQ,SAAAC,GACVF,EAAUE,GAAQJ,EAAOI,MAGtBF,ECPJ,IACMG,EAAgB,SAChBC,EAAmB,YCChC,IAAMC,EDoBC,WAAuB,IAAD,EACzB,OAAO,EAAP,iBAxBsB,MAyBJ,OADlB,cAEKF,EAAgB,UAFrB,cAGKC,EAAmB,aAHxB,ECrBYE,GAuBDC,E,kDApBX,WAAavC,GAAQ,uCACXA,G,0CAGV,WAAU,IAAD,OACCwC,EAAShC,KAAKR,MAAMwC,OACpBC,EAAW,SAACC,GAAD,OAAUA,IAAQ,EAAK1C,MAAM2C,OAAS,WAAa,IACpE,OACI,oBAAI1B,UAAU,iCAAd,SACK2B,OAAOC,KAAKR,GAASS,KAAI,SAAAJ,GAAG,OACzB,6BACI,mBAAGK,QAAS,kBAAMP,EAAOE,IAAMzB,UAAWwB,EAASC,GAAnD,SACKL,EAAQK,MAFRA,Y,GAXRrB,IAAMC,WCcZ0B,E,4JAjBX,WAAU,IAAD,EACsBxC,KAAKR,MAAzB2B,EADF,EACEA,KAAMsB,EADR,EACQA,WACPC,EAAe,kBAAMvB,IAAS7B,GAC9BqD,EAAe,kBAAMxB,IAAS9B,GAEpC,OACI,sBAAKoB,UAAU,oBAAf,UACI,mBAAGmC,MAAM,UACLnC,UAAW,eAAiBiC,IAAiB,WAAa,IAC1DH,QAAS,kBAAME,EAAWC,IAAiBtD,EAAYE,MAC3D,mBAAGsD,MAAM,SACLnC,UAAW,kBAAoBkC,IAAiB,WAAa,IAC7DJ,QAAS,kBAAME,EAAWE,IAAiBvD,EAAYC,a,GAb/CwB,IAAMC,WC4BnB+B,E,kDAzBX,WAAarD,GAAQ,uCACVA,G,0CAGX,WAAU,IAAD,EAC6CQ,KAAKR,MAAhDsD,EADF,EACEA,MAAOX,EADT,EACSA,OAAQH,EADjB,EACiBA,OAAQb,EADzB,EACyBA,KAAMsB,EAD/B,EAC+BA,WAEpC,OACI,iCACI,sBAAKhC,UAAU,sDAAf,UACI,cAAC,EAAD,CAAeU,KAAMA,EAAMsB,WAAYA,IACvC,sBAAKhC,UAAU,YAAf,UACI,iCACI,sBAAMA,UAAU,cAAhB,SAA+BqC,MAElC,iBAEL,qBAAKrC,UAAU,aAAf,SACI,cAAC,EAAD,CAAQ0B,OAAQA,EAAQH,OAAQA,e,GAnBnCnB,IAAMC,WCiBZiC,E,kDAlBX,WAAYvD,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTuD,QAAS,EAAKxD,MAAMwD,SAExB,EAAKrD,aAAe,EAAKA,aAAaC,KAAlB,gBALL,E,gDAQnB,SAAaG,GAAI,IACNiD,EAAWjD,EAAEG,OAAb8C,QACPhD,KAAKC,SAAS,CAAC+C,YACfhD,KAAKR,MAAMyD,aAAaD,K,oBAG5B,WACI,OAAO,uBAAOzC,KAAK,WAAWyC,QAAShD,KAAKP,MAAMuD,QAASrC,SAAUX,KAAKL,aAAcuD,GAAIlD,KAAKR,MAAM0D,S,GAhBxFrC,IAAMC,WCoBdqC,E,kDAlBX,WAAY3D,GAAQ,uCACVA,G,0CAGV,WAAU,IAAD,OACD4D,EAAOpD,KAAKR,MAAM6D,KAEtB,OACI,oBAAkB5C,UAAW2C,EAAKE,UAAY,6BAA+B,mBAA7E,SACI,sBAAK7C,UAAU,WAAf,UACI,cAAC,EAAD,CAAUwC,aAJD,SAACD,GAAD,OAAa,EAAKxD,MAAMyD,aAAaG,EAAKF,GAAIF,IAIjBE,GAAIE,EAAKF,GAAIF,QAASI,EAAKE,YACjE,uBAAOC,QAASH,EAAKF,GAArB,SAA0BE,EAAKhD,WAH9BgD,EAAKF,Q,GATHrC,IAAMC,WCgBd0C,E,4JAhBX,WAAU,IAAD,OACCC,EAAezD,KAAKR,MAAMiE,cAChC,OACI,oBAAIhD,UAAU,gBAAd,SACKgD,EAAcC,OAAS,EAEhB,oBAAIjD,UAAU,gBAAd,SACKgD,EAAcnB,KAAI,SAAAc,GAAI,OAAI,cAAC,EAAD,CAAUH,aAAc,EAAKzD,MAAMyD,aAA4BI,KAAMD,GAAfA,EAAKF,SAG5F,mBAAGzC,UAAU,mBAAb,uC,GAXKI,IAAMC,WCoBlB6C,E,4JAfX,WAAU,IAAD,EAC+B3D,KAAKR,MAAM6D,KAAxCO,EADF,EACEA,KAAMzB,EADR,EACQA,OAAQhB,EADhB,EACgBA,KAAMH,EADtB,EACsBA,MADtB,EAEgEhB,KAAKR,MAAMqE,QAAzE1D,EAFF,EAEEA,OAAQ2D,EAFV,EAEUA,aAAcb,EAFxB,EAEwBA,aAAcR,EAFtC,EAEsCA,WAAYxB,EAFlD,EAEkDA,WACjDwC,EPQP,SAAgBG,EAAM5C,GACzB,IAAI+C,EAAI/C,EAAMX,OAAO2D,cAErB,OAAOJ,EAAKzB,QAAO,gBDNO8B,EAAKC,ECMZ,ODNOD,ECMP,EAAE7D,KAA6B4D,cDNnBE,ECMkCH,GDLjC,IAAzBE,EAAIE,QAAQD,MQNOE,CPLvB,SAAqBR,EAAMzB,GAC9B,OAAQA,GACJ,KAAKP,EACD,OAAOgC,EAAKzB,QAAO,SAAAiB,GAAI,OAAuB,IAAnBA,EAAKE,aAEpC,KAAK3B,EACD,OAAOiC,EAAKzB,QAAO,SAAAiB,GAAI,OAAuB,IAAnBA,EAAKE,aAEpC,QACI,OAAOM,GOJkBS,CAAYT,EAAMzB,GAASnB,GAExD,OACI,sBAAKP,UAAU,WAAf,UACI,cAAC,EAAD,CAAaN,SAAQgB,OAAMH,QAAOC,eAClC,cAAC,EAAD,CAAcwC,cAAeA,EAAeR,aAAcA,IAC1D,cAAC,EAAD,CAAQR,WAAYA,EAAYK,MAAOW,EAAcC,OAAQvB,OAAQA,EAAQH,OAAQ8B,EAAc3C,KAAMA,W,GAVlGN,IAAMC,W,iBC0B7B,IAAIwD,EAAc,E,ICqBHC,E,kDA/CX,WAAY/E,GAAQ,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACH0B,KAAM7B,EACfsE,KDRQ,CACH,CACIV,GAAI,EACJ9C,KAAM,mBACNkD,WAAW,GACZ,CACCJ,GAAI,EACJ9C,KAAM,cACNkD,WAAW,GACZ,CACCJ,GAAI,EACJ9C,KAAM,oBACNkD,WAAW,ICHpBnB,OTVuB,MSWdnB,MAAO,IAEjB,EAAKb,OAAS,EAAKA,OAAOP,KAAZ,gBACd,EAAKkE,aAAe,EAAKA,aAAalE,KAAlB,gBACpB,EAAKqD,aAAe,EAAKA,aAAarD,KAAlB,gBACd,EAAK6C,WAAa,EAAKA,WAAW7C,KAAhB,gBAClB,EAAKqB,WAAa,EAAKA,WAAWrB,KAAhB,gBAZH,E,8CAenB,WAA8B,IAAnBuB,EAAkB,uDAAX/B,EACdY,KAAKC,SAAS,CAACkB,W,wBAGnB,SAAWf,GACPJ,KAAKC,SAAS,CAACe,MAAOZ,GAAQ,O,oBAGlC,SAAOA,GACH,IAAIoE,EDQL,SAAmBZ,EAAMP,GAC5B,IAAID,EAAOhB,OAAOqC,OAAO,CACrBvB,GAtCG,CACH,CACIA,GAAI,EACJ9C,KAAM,mBACNkD,WAAW,GACZ,CACCJ,GAAI,EACJ9C,KAAM,cACNkD,WAAW,GACZ,CACCJ,GAAI,EACJ9C,KAAM,oBACNkD,WAAW,IAqBHI,OAASY,KAMtBjB,GAEH,OAAOO,EAAKc,OAAO,CAACtB,ICbEuB,CAAU3E,KAAKP,MAAMmE,KAAM,CAACxD,OAAMkD,WAAW,IAE/DtD,KAAKC,SAAS,CAAC2D,KAAMY,M,0BAGzB,SAAarC,GACTnC,KAAKC,SAAS,CAACkC,a,0BAGnB,SAAayC,EAAQtB,GACjB,IAAMkB,EDlBP,SAAsBK,EAAOD,EAAQtB,GACxC,IAAIwB,EAAQD,EAAME,WAAU,SAAA3B,GAAI,OAAIA,EAAKF,KAAO0B,KAEhD,OAAOI,IAAOH,EAAD,eACRC,EAAQ,CACLxB,UAAW,CAAC2B,KAAM3B,MCaF4B,CAAalF,KAAKP,MAAMmE,KAAMgB,EAAQtB,GAE1DtD,KAAKC,SAAS,CAAC2D,KAAMY,M,oBAGzB,WACI,IAAIW,EVnCL,SAA0BA,EAAU3F,GACvC,OAAOqB,IAAMuE,SAAS9C,IAAI6C,GAAU,SAAAE,GAAK,OAAIxE,IAAMyE,aAAaD,EAAO7F,MUkCpD+F,CAAiBvF,KAAKR,MAAM2F,SAAU,CACjD9B,KAAMrD,KAAKP,MACXoE,QAASxC,EAAerB,KAAM,CAAC,SAAU,eAAgB,eAAgB,aAAc,iBAE3F,OAAO,8BAAMmF,Q,GA7COtE,IAAMC,WCYnB0E,E,4JAZd,WACC,OACC,qBAAK/E,UAAU,YAAf,SACC,qBAAKA,UAAU,MAAf,SACC,cAAC,EAAD,UACC,cAAC,EAAD,c,GANYI,IAAMC,WCOT2E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCGdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6b7e86f8.chunk.js","sourcesContent":["export const MODE_NONE = 'none';\nexport const MODE_SEARCH = 'search';\nexport const MODE_CREATE = 'create';","/* eslint-disable eqeqeq */\nimport React from \"react\";\n\nclass InputBox extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value: props.value || ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.clear = this.clear.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({value: e.target.value})\n    }\n\n    clear() {\n        this.setState({value: ''});\n    }\n\n    handleKeyUp(e) {\n        const {addNew} = this.props;\n        const text = this.state.value.trim();\n\n        if (e.keyCode == 13) {\n            addNew(text);    \n            this.setState({value: ''});\n        }\n    }\n\n    render() {\n        return (\n            <input type=\"text\" autoFocus\n                 className=\"form-control add-todo\" \n                 placeholder=\"Add New\" \n                 onChange={this.handleChange}\n                 onKeyUp={this.handleKeyUp}\n                 value={this.state.value}\n                 />\n        )\n    }\n}\nexport default InputBox;","import React from \"react\";\n\nclass Searchbox extends React.Component {\n    render() {\n        const {query, searchToDo} = this.props;\n        return (\n            <input\n                type=\"text\"\n                className=\"form-control search\"\n                value={query}\n                onChange={e => searchToDo(e.target.value)}\n                placeholder=\"Search\"\n            />\n        )\n    }\n}\n\nexport default Searchbox;","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { MODE_CREATE, MODE_SEARCH } from \"../services/mode\";\nimport InputBox from \"./InputBox\";\nimport Searchbox from \"./Searchbox\";\n\nclass InputWrapper extends React.Component {\n    render() {\n        const {mode, addNew, query, searchToDo} = this.props;\n        switch (mode) {\n            case MODE_CREATE:\n                return <InputBox {...{addNew}}/>;\n    \n            case MODE_SEARCH:\n                return <Searchbox {...{query, searchToDo}}/>;\n    \n            default:\n                return null;\n        }\n    }\n}\nexport default InputWrapper;","/* eslint-disable no-useless-constructor */\nimport React from \"react\";\nimport InputWrapper from \"./InputWrapper\";\n\nclass Header extends React.Component {\n    constructor (props) {\n        super (props);\n    }\n\n    render() {\n        const {addNew, mode, query, searchToDo} = this.props;\n        return (\n            <header>\n                <h1>Thing To Dos</h1>\n                <InputWrapper {...{addNew, mode, query, searchToDo}}/>\n            </header>\n        )\n    }\n}\nexport default Header;\n\n","import React from 'react';\n\nexport function objectWithOnly(object, attrs) {\n    let newObject = {};\n\n    attrs.forEach(attr => {\n        newObject[attr] = object[attr];\n    });\n\n    return newObject;\n}\n\nexport function wrapChildrenWith(children, props) {\n    return React.Children.map(children, child => React.cloneElement(child, props));\n}\n\nexport function stringInclues(str, substr) {\n    return str.indexOf(substr) !== -1;\n}","import { stringInclues } from \"../util/common\";\n\nexport const FILTER_ALL = 'all';\nexport const FILTER_ACTIVE = 'active';\nexport const FILTER_COMPLETED = 'completed';\n\nexport function applyFilter(list, filter) {\n    switch (filter) {\n        case FILTER_COMPLETED:\n            return list.filter(item => item.completed === true);\n\n        case FILTER_ACTIVE:\n            return list.filter(item => item.completed !== true);\n\n        default:\n            return list;\n    }\n}\n\nexport function search(list, query) {\n    let q = query.trim().toLowerCase();\n\n    return list.filter(({text}) => stringInclues(text.toLowerCase(), q));\n}\n\nexport function getOptions() {\n    return {\n        [FILTER_ALL]: 'All',\n        [FILTER_ACTIVE]: 'Active',\n        [FILTER_COMPLETED]: 'Completed'\n    };\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable no-useless-constructor */\nimport React from \"react\";\nimport { getOptions } from \"../services/filter\";\n\nconst options = getOptions();\n\nclass Filter extends React.Component {\n    constructor (props) {\n        super(props);\n    }\n\n    render() {\n        const change = this.props.change;\n        const getClass = (key) => (key === this.props.filter ? 'selected' : '');\n        return (\n            <ul className=\"filters list-unstyled clearfix\">\n                {Object.keys(options).map(key => (\n                    <li key={key}>\n                        <a onClick={() => change(key)} className={getClass(key)}>\n                            {options[key]}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\nexport default Filter;","import React from \"react\";\nimport { MODE_NONE, MODE_CREATE, MODE_SEARCH } from \"../services/mode\";\n\nclass ButtonWrapper extends React.Component {\n    render() {\n        const {mode, changeMode} = this.props;\n        const isCreateMode = () => mode === MODE_CREATE;\n        const isSearchMode = () => mode === MODE_SEARCH;\n\n        return (\n            <div className=\"pull-left buttons\">\n                <a title=\"Add New\" \n                    className={'button add ' + (isCreateMode() ? 'selected' : '')}\n                    onClick={() => changeMode(isCreateMode() ? MODE_NONE : MODE_CREATE)}></a>\n                <a title=\"Search\" \n                    className={'button search ' + (isSearchMode() ? 'selected' : '')}\n                    onClick={() => changeMode(isSearchMode() ? MODE_NONE : MODE_SEARCH)}></a>\n            </div>\n        )\n    }\n}\nexport default ButtonWrapper;","/* eslint-disable no-useless-constructor */\nimport React from \"react\";\nimport Filter from \"./Filter\";\nimport ButtonWrapper from \"./ButtonWrapper\";\n\nclass Footer extends React.Component {\n    constructor (props) {\n        super (props);\n    }\n\n    render() {\n        const {count, filter, change, mode, changeMode} = this.props;\n\n        return (\n            <footer>\n                <div className=\"todo-footer clearfix d-flex justify-content-between\">\n                    <ButtonWrapper mode={mode} changeMode={changeMode} />\n                    <div className=\"pull-left\">\n                        <strong>\n                            <span className=\"count-todos\">{count}</span>\n                        </strong>\n                        {' items left'}\n                    </div>\n                    <div className=\"pull-right\">\n                        <Filter filter={filter} change={change}/>\n                    </div>\n                </div>\n            </footer>\n        )\n    }\n}\nexport default Footer;\n\n","/* eslint-disable no-useless-constructor */\nimport React from \"react\";\n\nclass Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: this.props.checked\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const {checked} = e.target;\n        this.setState({checked});\n        this.props.changeStatus(checked);\n    }\n\n    render() {\n        return <input type=\"checkbox\" checked={this.state.checked} onChange={this.handleChange} id={this.props.id} />;\n    }\n}\nexport default Checkbox;","/* eslint-disable no-useless-constructor */\nimport React from \"react\";\nimport Checkbox from \"./Checkbox\";\n\nclass TodoItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let item = this.props.data;\n        const handleChange = (checked) => this.props.changeStatus(item.id, checked);\n        return (\n            <li key={item.id} className={item.completed ? 'ui-state-default completed' : 'ui-state-default'}>\n                <div className=\"checkbox\">\n                    <Checkbox changeStatus={handleChange} id={item.id} checked={item.completed} />\n                    <label htmlFor={item.id}>{item.text}</label>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default TodoItem;","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass FilteredList extends React.Component {\n    render() {\n        const filteredItems =this.props.filteredItems;\n        return (\n            <ul className=\"list-unstyled\">\n                {filteredItems.length > 0\n                    ? (\n                        <ul className=\"list-unstyled\">\n                            {filteredItems.map(item => <TodoItem changeStatus={this.props.changeStatus} key={item.id} data={item}/>)}\n                        </ul>\n                    )\n                    : <p className=\"alert alert-info\">There are no items.</p>\n                }\n            </ul>   \n        )\n    }\n}\nexport default FilteredList;","/* eslint-disable no-useless-constructor */\nimport React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport FilteredList from './FilteredList';\nimport {applyFilter, search} from './../services/filter';\n\nclass TodoList extends React.Component {\n    render() {\n        const {list, filter, mode, query} = this.props.data;\n        const {addNew, changeFilter, changeStatus, changeMode, searchToDo} = this.props.actions;\n        const filteredItems = search(applyFilter(list, filter), query);\n\n        return (\n            <div className=\"todolist\">\n                <Header {...{addNew, mode, query, searchToDo}}/>\n                <FilteredList filteredItems={filteredItems} changeStatus={changeStatus} />\n                <Footer changeMode={changeMode} count={filteredItems.length} filter={filter} change={changeFilter} mode={mode} />\n            </div>\n        )\n    }\n}\n\nexport default TodoList;","import update from 'immutability-helper/index';\n\nexport function getAll() {\n    return [\n        {\n            id: 1,\n            text: 'Learn Javascript',\n            completed: false\n        }, {\n            id: 2,\n            text: 'Learn React',\n            completed: false\n        }, {\n            id: 3,\n            text: 'Build a React App',\n            completed: false\n        }\n    ]\n}\n\nexport function getItemById(itemId) {\n    return getAll().find(item => item.id === itemId);\n}\nexport function updateStatus(items, itemId, completed) {\n    let index = items.findIndex(item => item.id === itemId);\n    // Returns a new list of data with updated item.\n    return update(items, {\n        [index]: {\n            completed: {$set: completed}\n        }\n    });\n}\n\nlet todoCounter = 1;\n\nfunction getNextId() {\n    return getAll().length + todoCounter++;\n}\n\nexport function addToList(list, data) {\n    let item = Object.assign({\n        id: getNextId()\n    }, data);\n\n    return list.concat([item]);\n}","import React from \"react\";\nimport {FILTER_ALL} from './../services/filter';\nimport {objectWithOnly, wrapChildrenWith} from '../util/common';\nimport {getAll, addToList, updateStatus} from './../services/todo';\nimport { MODE_NONE, MODE_CREATE } from \"../services/mode\";\n\nclass StateProvider extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            mode: MODE_CREATE,\n\t\t\tlist: getAll(),\n\t\t\tfilter: FILTER_ALL,\n            query: ''\n\t\t};\n\t\tthis.addNew = this.addNew.bind(this);\n\t\tthis.changeFilter = this.changeFilter.bind(this);\n\t\tthis.changeStatus = this.changeStatus.bind(this);\n        this.changeMode = this.changeMode.bind(this);\n        this.searchToDo = this.searchToDo.bind(this);\n\t}\n\n    changeMode(mode = MODE_NONE) {\n        this.setState({mode});\n    }\n\n    searchToDo(text) {\n        this.setState({query: text || ''});\n    }\n\n    addNew(text) {\n        let updatedList = addToList(this.state.list, {text, completed: false});\n\n        this.setState({list: updatedList})\n    }\n\n    changeFilter(filter) {\n        this.setState({filter});\n    }\n\n    changeStatus(itemId, completed) {\n        const updatedList = updateStatus(this.state.list, itemId, completed);\n\n        this.setState({list: updatedList});\n    }\n\n    render() {\n        let children = wrapChildrenWith(this.props.children, {\n            data: this.state,\n            actions: objectWithOnly(this, ['addNew', 'changeFilter', 'changeStatus', 'changeMode', 'searchToDo'])\n        });\n        return <div>{children}</div>;\n    }\n}\nexport default StateProvider;","import React from \"react\";\nimport \"../App.css\";\nimport TodoList from \"./TodoList\";\nimport StateProvider from \"./StateProvider\";\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<StateProvider>\n\t\t\t\t\t\t<TodoList />\n\t\t\t\t\t</StateProvider>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\n// Add bootstrap\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}